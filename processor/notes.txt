Testing
https://www.reddit.com/r/FPGA/comments/kl1q3i/soft_cpus_how_to_debug_and_test_in_a_sane_way/

Memory hierarchy 
+ ----------------- + ----------- + --------------- + -------------- +
|                   |    Latency  |    Throughput   |   Price / GB   |
+ ----------------- + ----------- + --------------- + -------------- +
|       L1 cache    |    1 ns     |                 |                |
| SRAM              |             |     100+ GB/s   |      $100      |
|       L2 cache    |    10 ns    |                 |                |
+ ----------------- + ----------- + --------------- + -------------- +
| DRAM              |    100 ns   |     30 GB/s     |      $3        |
+ ----------------- + ----------- + --------------- + -------------- +
| SSD               |    1^5 ns   |     1 GB/s      |      $0.1      |
+ ----------------- + ----------- + --------------- + -------------- +

Managing complexity
    Abstraction - hiding details when they are unimportant
    Discipline - sticking to abstraction layers
    Hierarchy - tree of well-connected modules
    Modularity - well-defined functions and interfaces
    Regularity - uniformity among modules; heavy reuse of common ones and minimization of unique ones

Digital abstraction
    1s and 0s
    Number systems and arithmetic
        Binary, decimal, octal, hex
        Unsigned/signed (two's complement)
    Logic gates
        AND, OR, XOR, NAND, NOR, XNOR, NOT 
    Beneath - real world is contiguous (analog)
        Specific voltages, logic levels, noise margin
        CMOS transistors (nMOS - on when gate is 1 | pMOS - off when gate is 1)

Circuit - a black box characterized by
    Inputs/outputs
    Functional specification - how inputs relate to outputs
    Timing specification - delay between inputs changing and outputs responding

    combinational circuits
        Inputs -> outputs
    sequencial circuits
        Inputs + state -> outputs
        Latch/flip-flop stores 1 bit; N-bit register is a bank of N flip-flops that share common CLK
        Synchronous sequencial circuits - having state that is synchronized to CLK
        Finite State Machines
            Moore machine: state -> output 
            Mealy machine: input + state -> output
        Timing - aperture (when signal is stable) of sequencial element is defined by a setup and hold time, before and after CLK edge
            Having aperture time allows us think in clock cycles (nth aperture time) rather than in contiguous time
            Cost of above assumption is clock period (time between two aperture times) should be long enough for all signals to settle

Fundamentals by Yale Patt
    Moore's Law
        A law of physics
        A law of microarchitecture
        A law of psychology

        Smaller transistors -> higher frequencies
        More transistors -> more functions to go faster

        New needs/problems
        New paradigms

        Pipelining
        Branch prediction
        Speculative execution (and recovery)
        Special execution units (FP, Graphics, MMX)
        Out-of-order execution (and in-order retirement)
        Wide issue
        Trace cache
        SMT, SSMT
        Soft errors
        Handling LLC misses

    The VonNeumann Paradigm
        Fetch, Decode, Evaluate address, Fetch data, ...

    The Transformation Hierarchy
        Problem
        Application Software
        Operating System
        Architecture
        ISA
        Microarchitecture
        Circuits
        Electrons

    Case 1: Accelerators
        ASICs, FPGAs, EMT instructions

    Case 2: Many cores
        Issue: how do you program these?

    Case 3: Spatial computing
    
    What we need to do, moving forward
