TK_KEYWORD   int
TK_IDENT     up
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     down
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     rows
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     x
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     queens
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     print
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     main
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     i
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_NUM       15
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     up
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     down
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     rows
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     queens
TK_PUNCT     (
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   return
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     queens
TK_PUNCT     (
TK_IDENT     c
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     r
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     r
TK_PUNCT     <
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     r
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     rows
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     ]
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     up
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     -
TK_IDENT     c
TK_PUNCT     +
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     down
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     +
TK_IDENT     c
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rows
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     up
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     -
TK_IDENT     c
TK_PUNCT     +
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     down
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     +
TK_IDENT     c
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_IDENT     c
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     r
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     c
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_IDENT     print
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     queens
TK_PUNCT     (
TK_IDENT     c
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rows
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     up
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     -
TK_IDENT     c
TK_PUNCT     +
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     down
TK_PUNCT     [
TK_IDENT     r
TK_PUNCT     +
TK_IDENT     c
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     }
TK_IDENT     print
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     <
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "%c "
TK_PUNCT     ,
TK_IDENT     x
TK_PUNCT     [
TK_IDENT     k
TK_PUNCT     ]
TK_PUNCT     +
TK_CHAR      '1'
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }