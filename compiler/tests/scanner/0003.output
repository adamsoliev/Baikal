TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     cbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     ibits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     sbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     lbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     ubits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     fbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     dbits
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     fprec
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     dprec
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgs
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgm
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgd
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgl
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rrc
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     crc
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     rfs
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_IDENT     main
TK_PUNCT     (
TK_IDENT     n
TK_PUNCT     ,
TK_IDENT     args
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     n
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     *
TK_IDENT     args
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   extern
TK_IDENT     s22
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s241
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s243
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s244
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s25
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s26
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s4
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s61
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s626
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s71
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s72
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s757
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s7813
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s714
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s715
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s81
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s84
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s85
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s86
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s88
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     s9
TK_PUNCT     (
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   int
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     sec
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     =
TK_PUNCT     {
TK_IDENT     s22
TK_PUNCT     ,
TK_IDENT     s241
TK_PUNCT     ,
TK_IDENT     s243
TK_PUNCT     ,
TK_IDENT     s244
TK_PUNCT     ,
TK_IDENT     s25
TK_PUNCT     ,
TK_IDENT     s26
TK_PUNCT     ,
TK_IDENT     s4
TK_PUNCT     ,
TK_IDENT     s61
TK_PUNCT     ,
TK_IDENT     s626
TK_PUNCT     ,
TK_IDENT     s71
TK_PUNCT     ,
TK_IDENT     s72
TK_PUNCT     ,
TK_IDENT     s757
TK_PUNCT     ,
TK_IDENT     s7813
TK_PUNCT     ,
TK_IDENT     s714
TK_PUNCT     ,
TK_IDENT     s715
TK_PUNCT     ,
TK_IDENT     s81
TK_PUNCT     ,
TK_IDENT     s84
TK_PUNCT     ,
TK_IDENT     s85
TK_PUNCT     ,
TK_IDENT     s86
TK_PUNCT     ,
TK_IDENT     s88
TK_PUNCT     ,
TK_IDENT     s9
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   struct
TK_IDENT     defs
TK_IDENT     d0
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     flgs
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     flgm
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     flgd
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     flgl
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     d0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_IDENT     sec
TK_PUNCT     )
TK_PUNCT     /
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_IDENT     sec
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     rrc
TK_PUNCT     =
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     sec
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     crc
TK_PUNCT     =
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     crc
TK_PUNCT     +
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     rrc
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     flgs
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "Section %s returned %d.\n"
TK_PUNCT     ,
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     rfs
TK_PUNCT     ,
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     rrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d0
TK_PUNCT     .
TK_IDENT     crc
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "\nNo errors detected.\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "\nFailed.\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   return
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s22
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     a234
TK_PUNCT     ,
TK_IDENT     a
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     _
TK_PUNCT     ,
TK_IDENT     _234
TK_PUNCT     ,
TK_IDENT     A
TK_PUNCT     ,
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s22er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s22,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs22
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s22    "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs22
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     _
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     _234
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     a234
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     +
TK_IDENT     _
TK_PUNCT     +
TK_IDENT     _234
TK_PUNCT     +
TK_IDENT     a234
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s22er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     A
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     A
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     a
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s22er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_PUNCT     (
TK_IDENT     rc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s241
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   long
TK_IDENT     pow2
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s241er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s241,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs241
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s241   "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   long
TK_IDENT     g
TK_PUNCT     [
TK_NUM       39
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       6
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       12
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       18
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       20
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       24
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       28
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       30
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       32
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       36
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     d
TK_PUNCT     [
TK_NUM       39
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     o
TK_PUNCT     [
TK_NUM       39
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     x
TK_PUNCT     [
TK_NUM       39
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs241
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_NUM       8
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       010
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       16
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       020
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       24
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       030
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       32
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       040
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       40
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       050
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       48
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       060
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       56
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       070
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       64
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0100
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       72
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0110
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       80
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0120
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       9
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0011
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       17
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0021
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       25
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0031
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       33
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0041
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       41
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0051
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       49
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0061
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       57
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0071
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       65
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0101
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       73
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0111
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       81
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0121
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s241er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_NUM       0x00abcdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0xabcdef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0xabcdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0Xabcdef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0Xabcdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XAbcdef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0XAbcdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XABcdef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0XABcdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XABCdef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0XABCdef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XABCDef
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0XABCDef
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XABCDEf
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0XABCDEf
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0XABCDEF
TK_PUNCT     |
TK_PUNCT     |
TK_NUM       0xABCDEF
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       11259375
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s241er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       010000000000
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       1073741824
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       0x40000000
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s241er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       67l
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       67L
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       067l
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       067L
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       0X67l
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_NUM       0x67L
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s241er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       17
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       18
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       39
TK_PUNCT     ;
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     pow2
TK_PUNCT     (
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       00
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x0
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       01
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x1
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       02
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x2
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       03
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x3
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       04
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x4
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       05
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x5
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       06
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x6
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       07
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x7
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       010
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x8
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       011
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x9
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       012
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xa
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       013
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xb
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       014
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xc
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       13
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       015
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xd
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       016
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xe
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       017
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xf
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       020
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x10
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       63
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       077
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x3f
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       64
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0100
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x40
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       255
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0377
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       256
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0400
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x100
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       4095
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       07777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xfff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       4096
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       010000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x1000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       23
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       65535
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       23
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0177777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       23
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       24
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       65536
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       24
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0200000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       24
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x10000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       25
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       262143
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       25
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       25
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x3ffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       26
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       262144
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       26
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       01000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       26
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x40000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       27
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1048575
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       27
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       03777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       27
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xfffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       28
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1048576
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       28
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       04000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       28
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x100000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       29
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       16777215
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       29
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       077777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       29
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xffffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       16777216
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0100000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x1000000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       31
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       268435455
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       31
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       01777777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       31
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xfffffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       32
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       268435456
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       32
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       02000000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       32
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x10000000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       33
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1073741823
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       33
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       07777777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       33
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x3fffffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       34
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1073741824
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       34
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       010000000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       34
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x40000000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       35
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       4294967295
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       35
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       037777777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       35
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xffffffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       36
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       4294967296
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       36
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       040000000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       36
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x100000000
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       37
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       68719476735
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       37
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0777777777777
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       37
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0xfffffffff
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       38
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       68719476736
TK_PUNCT     ;
TK_IDENT     o
TK_PUNCT     [
TK_NUM       38
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       01000000000000
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       38
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0x1000000000
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       39
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     g
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     o
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     o
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     x
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "Decimal and octal/hex constants sometimes give\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "   different results when assigned to longs.\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     }
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   long
TK_IDENT     pow2
TK_PUNCT     (
TK_IDENT     n
TK_PUNCT     )
TK_KEYWORD   long
TK_IDENT     n
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   long
TK_IDENT     s
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_IDENT     n
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     =
TK_IDENT     s
TK_PUNCT     *
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   return
TK_IDENT     s
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s243
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s243er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s243,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs243
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s243   "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     chars
TK_PUNCT     [
TK_NUM       256
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs243
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     zerofill
TK_PUNCT     (
TK_IDENT     chars
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'a'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'A'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '~'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '0'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'b'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'B'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '!'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '1'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'c'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'C'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '"'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '2'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'd'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'D'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '#'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '3'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'e'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'E'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '%'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '4'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'f'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'F'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '&'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '5'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'g'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'G'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '('
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '6'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'h'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'H'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ')'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '7'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'i'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'I'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '_'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '8'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'j'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'J'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '='
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '9'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'k'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'K'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '-'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'l'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'L'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '^'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'm'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'M'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '|'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\n'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'n'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'N'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\t'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'o'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'O'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '{'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\b'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'p'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'P'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '}'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\r'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'q'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'Q'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '['
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\f'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'r'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'R'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ']'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      's'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'S'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '+'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\\'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      't'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'T'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ';'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\''
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'u'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'U'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '*'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'v'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'V'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ':'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '\0'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'w'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'W'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '<'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ' '
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'x'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'X'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '>'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'y'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'Y'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      ','
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'z'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      'Z'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '.'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '?'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     chars
TK_PUNCT     [
TK_CHAR      '/'
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sumof
TK_PUNCT     (
TK_IDENT     chars
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       98
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s243er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_CHAR      '\0'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\01'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\02'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\03'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\04'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\05'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\06'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\07'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\10'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\17'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\20'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\77'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       63
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\100'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       64
TK_PUNCT     |
TK_PUNCT     |
TK_CHAR      '\177'
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       127
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s243er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     zerofill
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       256
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     *
TK_IDENT     x
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sumof
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     p
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     total
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ;
TK_IDENT     p
TK_PUNCT     =
TK_IDENT     x
TK_PUNCT     ;
TK_IDENT     total
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       256
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     total
TK_PUNCT     =
TK_IDENT     total
TK_PUNCT     +
TK_PUNCT     *
TK_IDENT     p
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ;
TK_KEYWORD   return
TK_IDENT     total
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s244
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   double
TK_IDENT     a
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s244er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s244,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs244
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s244   "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs244
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       .1250E+04
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1.250E3
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       12.50E02
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       125.0e+1
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1250e00
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       12500.e-01
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       125000e-2
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1250.;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     a
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s244er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       .1250E+04
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       1.250E3
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       12.50E02
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       1.250e+1
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       1250e00
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       12500.e-01
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       125000e-2
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_NUM       1250. 
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s244er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s25
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     s2
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s25er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s25,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs25
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s25    "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs25
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_STR       "..."
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     s
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     s
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '.'
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s25er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\0'
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s25er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_STR       ".\"."
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '"'
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s25er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s
TK_PUNCT     =
TK_STR       "\n\t\b\r\f\\\'"
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\n'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\t'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\b'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\r'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\f'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\\'
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     s
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_CHAR      '\''
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s25er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s2
TK_PUNCT     =
TK_STR       "queep!"
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_STR       "queep!"
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_STR       "queep!"
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     s2
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s25er
TK_PUNCT     ,
TK_NUM       32
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s26
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs26
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s26    "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     c0
TK_PUNCT     ,
TK_IDENT     c1
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     temp
TK_PUNCT     ,
TK_IDENT     one
TK_PUNCT     ,
TK_IDENT     delta
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     tempd
TK_PUNCT     ,
TK_IDENT     oned
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "%3d bits in %ss.\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s2
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "%e is the least number that can be added to 1. (%s).\n"
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs26
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     c0
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     c1
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_IDENT     c0
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     c1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     c1
TK_PUNCT     =
TK_IDENT     c1
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ibits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     sbits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     lbits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ubits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     fbits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     dbits
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     *
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     one
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     delta
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     temp
TK_PUNCT     =
TK_NUM       0.;
TK_KEYWORD   while
TK_PUNCT     (
TK_IDENT     temp
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     one
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     temp
TK_PUNCT     =
TK_IDENT     one
TK_PUNCT     +
TK_IDENT     delta
TK_PUNCT     ;
TK_IDENT     delta
TK_PUNCT     =
TK_IDENT     delta
TK_PUNCT     /
TK_NUM       2.;
TK_PUNCT     }
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     fprec
TK_PUNCT     =
TK_IDENT     delta
TK_PUNCT     *
TK_NUM       4.;
TK_IDENT     oned
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     delta
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     tempd
TK_PUNCT     =
TK_NUM       0.;
TK_KEYWORD   while
TK_PUNCT     (
TK_IDENT     tempd
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     oned
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     tempd
TK_PUNCT     =
TK_IDENT     oned
TK_PUNCT     +
TK_IDENT     delta
TK_PUNCT     ;
TK_IDENT     delta
TK_PUNCT     =
TK_IDENT     delta
TK_PUNCT     /
TK_NUM       2.;
TK_PUNCT     }
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     dprec
TK_PUNCT     =
TK_IDENT     delta
TK_PUNCT     *
TK_NUM       4.;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     ,
TK_STR       "char"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ibits
TK_PUNCT     ,
TK_STR       "int"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     sbits
TK_PUNCT     ,
TK_STR       "short"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     lbits
TK_PUNCT     ,
TK_STR       "long"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ubits
TK_PUNCT     ,
TK_STR       "unsigned"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     fbits
TK_PUNCT     ,
TK_STR       "float"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     dbits
TK_PUNCT     ,
TK_STR       "double"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s2
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     fprec
TK_PUNCT     ,
TK_STR       "float"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s2
TK_PUNCT     ,
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     dprec
TK_PUNCT     ,
TK_STR       "double"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   int
TK_IDENT     extvar
TK_PUNCT     ;
TK_IDENT     s4
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s4er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s4,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs4
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s4     "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     sint
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     pint
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     lint
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     target
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_KEYWORD   int
TK_IDENT     mask
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs4
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     svtest
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     zero
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s4er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_IDENT     setev
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     testev
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s4er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_IDENT     lint
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     pint
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     pint
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     sint
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s4er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     target
TK_PUNCT     =
TK_PUNCT     ~
TK_NUM       0
TK_IDENT     U
TK_PUNCT     ;
TK_IDENT     mask
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_IDENT     target
TK_PUNCT     )
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     cbits
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     mask
TK_PUNCT     =
TK_IDENT     mask
TK_PUNCT     &
TK_IDENT     target
TK_PUNCT     ;
TK_IDENT     target
TK_PUNCT     =
TK_IDENT     target
TK_PUNCT     >
TK_PUNCT     >
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     mask
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     target
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s4er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     svtest
TK_PUNCT     (
TK_IDENT     n
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     n
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   switch
TK_PUNCT     (
TK_IDENT     n
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   case
TK_NUM       0
TK_PUNCT     :
TK_IDENT     k
TK_PUNCT     =
TK_NUM       1978
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       1
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1978
TK_PUNCT     )
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   else
TK_PUNCT     {
TK_IDENT     k
TK_PUNCT     =
TK_NUM       1929
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       2
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1929
TK_PUNCT     )
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     zero
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   static
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     testev
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     extvar
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1066
TK_PUNCT     )
TK_KEYWORD   return
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   else
TK_KEYWORD   return
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s61
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s61er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s61,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs61
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s61    "
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     from
TK_PUNCT     ,
TK_IDENT     shortint
TK_PUNCT     ;
TK_KEYWORD   long
TK_KEYWORD   int
TK_IDENT     to
TK_PUNCT     ,
TK_IDENT     longint
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     fromc
TK_PUNCT     ,
TK_IDENT     charint
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     wd
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     upper_alpha
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     lower_alpha
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "abcdefghijklmnopqrstuvwxyz"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     numbers
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "0123456789"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     special_characters
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "~!\"#%&()_=-^|{}[]+;*:<>,.?/"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     extra_special_characters
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "\n\t\b\r\f\\\'"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     blank_and_NUL
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       " \0"
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs61
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     from
TK_PUNCT     =
TK_PUNCT     -
TK_NUM       19
TK_PUNCT     ;
TK_IDENT     to
TK_PUNCT     =
TK_IDENT     from
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     to
TK_PUNCT     !
TK_PUNCT     =
TK_PUNCT     -
TK_NUM       19
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s61er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     upper_alpha
TK_PUNCT     ;
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     lower_alpha
TK_PUNCT     ;
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     numbers
TK_PUNCT     ;
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     special_characters
TK_PUNCT     ;
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     extra_special_characters
TK_PUNCT     ;
TK_IDENT     pc
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     blank_and_NUL
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       6
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pc
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pc
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     <
TK_NUM       0
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s61er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     longint
TK_PUNCT     =
TK_NUM       1048579
TK_PUNCT     ;
TK_IDENT     shortint
TK_PUNCT     =
TK_IDENT     longint
TK_PUNCT     ;
TK_IDENT     charint
TK_PUNCT     =
TK_IDENT     longint
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     shortint
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     longint
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     shortint
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_IDENT     charint
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     longint
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     charint
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s61er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s626
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s626er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s626,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs626
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s626   "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     eps
TK_PUNCT     ,
TK_IDENT     f1
TK_PUNCT     ,
TK_IDENT     f2
TK_PUNCT     ,
TK_IDENT     f3
TK_PUNCT     ,
TK_IDENT     f4
TK_PUNCT     ,
TK_IDENT     f
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     lint1
TK_PUNCT     ,
TK_IDENT     lint2
TK_PUNCT     ,
TK_IDENT     l
TK_PUNCT     ,
TK_IDENT     ls
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     c
TK_PUNCT     ,
TK_IDENT     t
TK_PUNCT     [
TK_NUM       28
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     t0
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     s
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     is
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     u
TK_PUNCT     ,
TK_IDENT     us
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     d
TK_PUNCT     ,
TK_IDENT     ds
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs626
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     f1
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     lint1
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     lint2
TK_PUNCT     =
TK_NUM       1.;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     lbits
TK_PUNCT     -
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     f1
TK_PUNCT     =
TK_IDENT     f1
TK_PUNCT     *
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     lint2
TK_PUNCT     =
TK_PUNCT     (
TK_IDENT     lint2
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     |
TK_IDENT     lint1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     f2
TK_PUNCT     =
TK_IDENT     lint2
TK_PUNCT     ;
TK_IDENT     f1
TK_PUNCT     =
TK_PUNCT     (
TK_IDENT     f1
TK_PUNCT     -
TK_IDENT     f2
TK_PUNCT     )
TK_PUNCT     /
TK_IDENT     f1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f1
TK_PUNCT     >
TK_NUM       2.*
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     fprec
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s626er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     c
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_IDENT     is
TK_PUNCT     =
TK_NUM       15625
TK_PUNCT     ;
TK_IDENT     u
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_IDENT     us
TK_PUNCT     =
TK_NUM       15625
TK_PUNCT     ;
TK_IDENT     l
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_IDENT     ls
TK_PUNCT     =
TK_NUM       15625
TK_PUNCT     ;
TK_IDENT     f
TK_PUNCT     =
TK_NUM       125.;
TK_IDENT     d
TK_PUNCT     =
TK_NUM       125.;
TK_IDENT     ds
TK_PUNCT     =
TK_NUM       15625.;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       28
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     c
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     is
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     u
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     us
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     u
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     us
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     u
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     us
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     u
TK_PUNCT     *
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     us
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     l
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ls
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     l
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ls
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     l
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ls
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     l
TK_PUNCT     *
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     us
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     l
TK_PUNCT     *
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ls
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     *
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       23
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       24
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       25
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       26
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     *
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     ds
TK_PUNCT     )
TK_IDENT     t
TK_PUNCT     [
TK_NUM       27
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     t0
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       28
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     t0
TK_PUNCT     =
TK_IDENT     t0
TK_PUNCT     +
TK_IDENT     t
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     t0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s626er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "   key="
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       28
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "%d"
TK_PUNCT     ,
TK_IDENT     t
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     }
TK_IDENT     l
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       0100000
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     >
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       0100000
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s626er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s71
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s71er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s71,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs71
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s71    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     q
TK_PUNCT     =
TK_CHAR      'q'
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     McCarthy
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     clobber
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     a
TK_PUNCT     ,
TK_IDENT     b
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     p
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs71
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_STR       "queep"
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     q
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_NUM       2+3
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2+3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     x
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1942
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1942
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     x
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_PUNCT     *
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_PUNCT     +
TK_PUNCT     (
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     McCarthy
TK_PUNCT     (
TK_PUNCT     -
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       91
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     a
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     b
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     p
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     b
TK_PUNCT     ;
TK_IDENT     clobber
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     ,
TK_IDENT     p
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     b
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     dprec
TK_PUNCT     !
TK_PUNCT     =
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     )
TK_PUNCT     .
TK_IDENT     dprec
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s71er
TK_PUNCT     ,
TK_NUM       32
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     McCarthy
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     >
TK_NUM       100
TK_PUNCT     )
TK_KEYWORD   return
TK_IDENT     x
TK_PUNCT     -
TK_NUM       10
TK_PUNCT     ;
TK_KEYWORD   else
TK_KEYWORD   return
TK_IDENT     McCarthy
TK_PUNCT     (
TK_IDENT     McCarthy
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     +
TK_NUM       11
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     clobber
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     ,
TK_IDENT     y
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     y
TK_PUNCT     ;
TK_PUNCT     {
TK_IDENT     x
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_PUNCT     *
TK_IDENT     y
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s714
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     f
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "Local error %d.\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s714er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s714,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs714
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s714   "
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     prlc
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     cl
TK_PUNCT     ,
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     sl
TK_PUNCT     ,
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     il
TK_PUNCT     ,
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     ll
TK_PUNCT     ,
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     ul
TK_PUNCT     ,
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     dl
TK_PUNCT     ,
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs714
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     prlc
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgl
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       13
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       17
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       18
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       19
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       21
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       22
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       23
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       24
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       25
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       27
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       28
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       29
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       30
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       31
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       33
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       34
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       35
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       36
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       37
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       38
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       39
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       40
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       41
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       42
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       43
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       44
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       45
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       46
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       47
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       48
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       49
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       50
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       51
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       52
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       53
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       54
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       55
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       56
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       57
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       58
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       59
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       60
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       61
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       62
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       63
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       64
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       65
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       66
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       67
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       68
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       69
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       70
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       71
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       72
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       73
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       74
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       75
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       76
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       77
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       78
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       79
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       80
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       81
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       82
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       83
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       84
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       85
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       86
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       87
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       88
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       89
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       90
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       91
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       92
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       93
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       94
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       95
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       96
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       97
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     +
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       98
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       99
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       100
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       101
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       102
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       103
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       104
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       105
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       106
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       107
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       108
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       109
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       110
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       111
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       112
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       113
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       114
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       115
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       116
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       117
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       118
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       119
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       120
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       121
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       122
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       123
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       124
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       125
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       126
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       127
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       128
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       129
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       130
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       131
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       132
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       133
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       134
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       135
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       136
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       137
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       138
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       139
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       140
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       141
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       142
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       143
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       144
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       145
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       146
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     -
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       147
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       148
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       149
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       150
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       151
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       152
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       153
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       154
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       155
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       156
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       157
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       158
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       159
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       160
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       161
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       162
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       163
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       164
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       165
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       166
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       167
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       168
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       169
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       170
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       171
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       172
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       173
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       174
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       175
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       176
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       177
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       178
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       179
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       180
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       181
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       182
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       183
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       184
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       185
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       186
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       187
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       188
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       189
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       190
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       191
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       192
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       193
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       194
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       195
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     *
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       196
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       197
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       198
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       199
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       200
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       201
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       202
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       203
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       204
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       205
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       206
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       207
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       208
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       209
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       210
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       211
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       212
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       213
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       214
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       215
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       216
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       217
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       218
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       219
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       220
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       221
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       222
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       223
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       224
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       225
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       226
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       227
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       228
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       229
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       230
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       231
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       232
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       233
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       234
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       235
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       236
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       237
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     fl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     fl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       238
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       239
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       240
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       241
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       242
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       243
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     fr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     fr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       244
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     dl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     dr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     dl
TK_PUNCT     /
TK_PUNCT     =
TK_IDENT     dr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     dl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       245
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       246
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       247
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       248
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       249
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       250
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       251
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       252
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       253
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       254
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       255
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       256
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       257
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       258
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       259
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       260
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       261
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       262
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       263
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       264
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       265
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       266
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       267
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       268
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       269
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     %
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       270
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       271
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       272
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       273
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       274
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       275
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       276
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       277
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       278
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       279
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       280
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       281
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       282
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       283
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       284
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       285
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       286
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       287
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       288
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       289
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       290
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       291
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       292
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       293
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       294
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     >
TK_PUNCT     >
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       295
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       296
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       297
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       298
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       299
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       300
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       301
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       302
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       303
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       304
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       305
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       306
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       307
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       308
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       309
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       310
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       311
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       312
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       313
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       314
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       315
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       316
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       317
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       318
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       319
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       320
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       321
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       322
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       323
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       324
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       325
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       326
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       327
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       328
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       329
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       330
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       331
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       332
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       333
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       334
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       335
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       336
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       337
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       338
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       339
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       340
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       341
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       342
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       343
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       344
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     &
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       345
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       346
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       347
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       348
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       349
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       350
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       351
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       352
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       353
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       354
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       355
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       356
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       357
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       358
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       359
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       360
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       361
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       362
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       363
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       364
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       365
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       366
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       367
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       368
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       369
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     ^
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       370
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       371
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       372
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       373
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       374
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     cl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     cl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     cl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       375
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       376
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       377
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       378
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       379
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     sl
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sl
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       380
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       381
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       382
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       383
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       384
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     il
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     il
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     il
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       385
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       386
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       387
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       388
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       389
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ll
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ll
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ll
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       390
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     cr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     cr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       391
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     sr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     sr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       392
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ir
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ir
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       393
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     lr
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     lr
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       394
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ul
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     ur
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     ul
TK_PUNCT     |
TK_PUNCT     =
TK_IDENT     ur
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     ul
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       395
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     f
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s714er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s715
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s715er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s715,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs715
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s715   "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     a
TK_PUNCT     ,
TK_IDENT     t
TK_PUNCT     ,
TK_IDENT     c
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     =
TK_IDENT     c
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs715
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ,
TK_PUNCT     +
TK_PUNCT     +
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s715er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s715f
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     ,
TK_PUNCT     (
TK_IDENT     t
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ,
TK_IDENT     t
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     c
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s715er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s715f
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     ,
TK_IDENT     y
TK_PUNCT     ,
TK_IDENT     z
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     ,
TK_IDENT     y
TK_PUNCT     ,
TK_IDENT     z
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   return
TK_IDENT     y
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s72
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s72er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s72,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs72
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s72    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     k
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     c
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     s
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     l
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     u
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     d
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     f
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs72
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_PUNCT     &
TK_PUNCT     *
TK_PUNCT     &
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s72er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     +
TK_PUNCT     (
TK_PUNCT     -
TK_IDENT     k
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s72er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     k
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ibits
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     k
TK_PUNCT     =
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     |
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     ~
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s72er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     k
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     +
TK_PUNCT     +
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     -
TK_PUNCT     -
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     k
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     k
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s72er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     c
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     l
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     =
TK_NUM       26.;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     u
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     f
TK_PUNCT     =
TK_NUM       26.;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26.

TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26.

TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   float
TK_PUNCT     )
TK_IDENT     d
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     c
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26.

TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     l
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26.

TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     u
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   double
TK_PUNCT     )
TK_IDENT     f
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       26. 
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_IDENT     lrc
TK_PUNCT     +
TK_NUM       64
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s72er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s757
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s757er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s757,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs757
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s757   "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     t
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     a
TK_PUNCT     ,
TK_IDENT     b
TK_PUNCT     ,
TK_IDENT     c
TK_PUNCT     ,
TK_IDENT     d
TK_PUNCT     ,
TK_IDENT     x
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     p
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     rs
TK_PUNCT     ,
TK_IDENT     ls
TK_PUNCT     ,
TK_IDENT     rt
TK_PUNCT     ,
TK_IDENT     lt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs757
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     t
TK_PUNCT     =
TK_NUM       40
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     t
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       3
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1280
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     t
TK_PUNCT     >
TK_PUNCT     >
TK_NUM       3
TK_PUNCT     >
TK_PUNCT     >
TK_NUM       2
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     <
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ubits
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rs
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     ls
TK_PUNCT     =
TK_IDENT     rs
TK_PUNCT     <
TK_PUNCT     <
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ubits
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rt
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     lt
TK_PUNCT     =
TK_PUNCT     ~
TK_IDENT     rt
TK_PUNCT     >
TK_PUNCT     >
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     rt
TK_PUNCT     =
TK_PUNCT     ~
TK_IDENT     rt
TK_PUNCT     <
TK_PUNCT     <
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     ubits
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     <
TK_IDENT     k
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     rs
TK_PUNCT     &
TK_IDENT     rt
TK_PUNCT     )
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     <
TK_IDENT     k
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     ls
TK_PUNCT     &
TK_IDENT     lt
TK_PUNCT     )
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     rs
TK_PUNCT     =
TK_IDENT     rs
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     ls
TK_PUNCT     =
TK_IDENT     ls
TK_PUNCT     >
TK_PUNCT     >
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     a
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     b
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     c
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     <
TK_IDENT     b
TK_PUNCT     <
TK_IDENT     c
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     &
TK_IDENT     x
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     x
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     &
TK_IDENT     x
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     <
TK_PUNCT     &
TK_IDENT     x
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "Increasing array elements assigned to decreasing locations\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       16
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     x
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     x
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     a
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     b
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     b
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     b
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     c
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     c
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     c
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     <
TK_IDENT     b
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     c
TK_PUNCT     <
TK_IDENT     d
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     x
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     *
TK_IDENT     a
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     *
TK_IDENT     b
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     *
TK_IDENT     c
TK_PUNCT     +
TK_IDENT     d
TK_PUNCT     ]
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     p
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     p
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s757er
TK_PUNCT     ,
TK_NUM       32
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s7813
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     prlc
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     i
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     r
TK_PUNCT     ,
TK_IDENT     zero
TK_PUNCT     ,
TK_IDENT     one
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     fl
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "Local error %d.\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s7813er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s7813,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs7813
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s7813  "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs7813
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     prlc
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgl
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       13
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       17
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       18
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       21
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       22
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       23
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       24
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       25
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       27
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       28
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       30
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       31
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       32
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       33
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       34
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       35
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       36
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       37
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       38
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       39
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       40
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       41
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       42
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       43
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       44
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       45
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       46
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       47
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       48
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       49
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       50
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       51
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       52
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       53
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       54
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       55
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       56
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       57
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       58
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       56
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       60
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       61
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       62
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       63
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       64
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       65
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   short
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       66
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       67
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       68
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   long
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       69
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       70
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       71
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   unsigned
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       72
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     &
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       73
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       74
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       12
TK_PUNCT     ^
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_NUM       10
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       75
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s7813er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     &
TK_PUNCT     &
TK_IDENT     j
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s7813er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     i
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     j
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     j
TK_PUNCT     -
TK_PUNCT     -
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prlc
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     fl
TK_PUNCT     ,
TK_IDENT     lrc
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s7813er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     i
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     zero
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     one
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     r
TK_PUNCT     =
TK_IDENT     one
TK_PUNCT     ?
TK_IDENT     zero
TK_PUNCT     :
TK_IDENT     one
TK_PUNCT     ?
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     :
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     r
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     i
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s7813er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     one
TK_PUNCT     ?
TK_IDENT     zero
TK_PUNCT     :
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_IDENT     zero
TK_PUNCT     ?
TK_NUM       1
TK_PUNCT     :
TK_IDENT     zero
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s7813er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s81
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s81er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s81,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs81
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s81    "
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     k
TK_PUNCT     ,
TK_IDENT     rc
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     crc
TK_PUNCT     ,
TK_IDENT     prc
TK_PUNCT     ,
TK_IDENT     irc
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     rchar
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     nrchar
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     rptr
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     nrptr
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     rint
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     nrint
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     badtest
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "Register count for %s is unreliable.\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     goodtest
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "%d registers assigned to %s variables.\n"
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     crc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     prc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     irc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs81
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       50
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rchar
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     nrchar
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     rptr
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     nrptr
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     rint
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     nrint
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     rchar
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     nrchar
TK_PUNCT     )
TK_IDENT     crc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     rptr
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     nrptr
TK_PUNCT     )
TK_IDENT     prc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     rint
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     nrint
TK_PUNCT     )
TK_IDENT     irc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     <
TK_PUNCT     <
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     crc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s81er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     prc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s81er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     irc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s81er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     k
TK_PUNCT     =
TK_IDENT     regc
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     <
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     badtest
TK_PUNCT     ,
TK_STR       "char"
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     goodtest
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ,
TK_STR       "char"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     k
TK_PUNCT     =
TK_IDENT     regp
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     <
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     badtest
TK_PUNCT     ,
TK_STR       "pointer"
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     goodtest
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ,
TK_STR       "pointer"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     k
TK_PUNCT     =
TK_IDENT     regi
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     <
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     badtest
TK_PUNCT     ,
TK_STR       "int"
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   else
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     goodtest
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ,
TK_STR       "int"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     regc
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     r00
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r01
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r02
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r03
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r04
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r05
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r06
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r07
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r08
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r09
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r10
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r11
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r12
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r13
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r14
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r15
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r16
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r17
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r18
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r19
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r20
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r21
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r22
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r23
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r24
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r25
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r26
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r27
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r28
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r29
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r30
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r31
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r32
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r33
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   char
TK_IDENT     r34
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r35
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r36
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r37
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     r38
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     n1
TK_PUNCT     ,
TK_IDENT     n2
TK_PUNCT     ,
TK_IDENT     nr
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     d
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     r00
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     r01
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     r02
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     r03
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     r04
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     r05
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     r06
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_IDENT     r07
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     r08
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     r09
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_IDENT     r10
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     r11
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_IDENT     r12
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     r13
TK_PUNCT     =
TK_NUM       13
TK_PUNCT     ;
TK_IDENT     r14
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     ;
TK_IDENT     r15
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     ;
TK_IDENT     r16
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_IDENT     r17
TK_PUNCT     =
TK_NUM       17
TK_PUNCT     ;
TK_IDENT     r18
TK_PUNCT     =
TK_NUM       18
TK_PUNCT     ;
TK_IDENT     r19
TK_PUNCT     =
TK_NUM       19
TK_PUNCT     ;
TK_IDENT     r20
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     ;
TK_IDENT     r21
TK_PUNCT     =
TK_NUM       21
TK_PUNCT     ;
TK_IDENT     r22
TK_PUNCT     =
TK_NUM       22
TK_PUNCT     ;
TK_IDENT     r23
TK_PUNCT     =
TK_NUM       23
TK_PUNCT     ;
TK_IDENT     r24
TK_PUNCT     =
TK_NUM       24
TK_PUNCT     ;
TK_IDENT     r25
TK_PUNCT     =
TK_NUM       25
TK_PUNCT     ;
TK_IDENT     r26
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     r27
TK_PUNCT     =
TK_NUM       27
TK_PUNCT     ;
TK_IDENT     r28
TK_PUNCT     =
TK_NUM       28
TK_PUNCT     ;
TK_IDENT     r29
TK_PUNCT     =
TK_NUM       29
TK_PUNCT     ;
TK_IDENT     r30
TK_PUNCT     =
TK_NUM       30
TK_PUNCT     ;
TK_IDENT     r31
TK_PUNCT     =
TK_NUM       31
TK_PUNCT     ;
TK_IDENT     r32
TK_PUNCT     =
TK_NUM       32
TK_PUNCT     ;
TK_IDENT     r33
TK_PUNCT     =
TK_NUM       33
TK_PUNCT     ;
TK_IDENT     r34
TK_PUNCT     =
TK_NUM       34
TK_PUNCT     ;
TK_IDENT     r35
TK_PUNCT     =
TK_NUM       35
TK_PUNCT     ;
TK_IDENT     r36
TK_PUNCT     =
TK_NUM       36
TK_PUNCT     ;
TK_IDENT     r37
TK_PUNCT     =
TK_NUM       37
TK_PUNCT     ;
TK_IDENT     r38
TK_PUNCT     =
TK_NUM       38
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r00
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r38
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     ;
TK_IDENT     n1
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       22
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   switch
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   case
TK_NUM       1
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     n2
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     nr
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       2
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     s
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     nr
TK_PUNCT     =
TK_IDENT     nr
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       3
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_KEYWORD   return
TK_NUM       16-
TK_IDENT     nr
TK_PUNCT     ;
TK_KEYWORD   else
TK_KEYWORD   return
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     regi
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     r00
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r01
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r02
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r03
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r04
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r05
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r06
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r07
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r08
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r09
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r10
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r11
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r12
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r13
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r14
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r15
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r16
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r17
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r18
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r19
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r20
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r21
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r22
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r23
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r24
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r25
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r26
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r27
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r28
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r29
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r30
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r31
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r32
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r33
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     r34
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r35
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r36
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r37
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     r38
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     n1
TK_PUNCT     ,
TK_IDENT     n2
TK_PUNCT     ,
TK_IDENT     nr
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     d
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     r00
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     r01
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     r02
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     r03
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     r04
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     r05
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     r06
TK_PUNCT     =
TK_NUM       6
TK_PUNCT     ;
TK_IDENT     r07
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     r08
TK_PUNCT     =
TK_NUM       8
TK_PUNCT     ;
TK_IDENT     r09
TK_PUNCT     =
TK_NUM       9
TK_PUNCT     ;
TK_IDENT     r10
TK_PUNCT     =
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     r11
TK_PUNCT     =
TK_NUM       11
TK_PUNCT     ;
TK_IDENT     r12
TK_PUNCT     =
TK_NUM       12
TK_PUNCT     ;
TK_IDENT     r13
TK_PUNCT     =
TK_NUM       13
TK_PUNCT     ;
TK_IDENT     r14
TK_PUNCT     =
TK_NUM       14
TK_PUNCT     ;
TK_IDENT     r15
TK_PUNCT     =
TK_NUM       15
TK_PUNCT     ;
TK_IDENT     r16
TK_PUNCT     =
TK_NUM       16
TK_PUNCT     ;
TK_IDENT     r17
TK_PUNCT     =
TK_NUM       17
TK_PUNCT     ;
TK_IDENT     r18
TK_PUNCT     =
TK_NUM       18
TK_PUNCT     ;
TK_IDENT     r19
TK_PUNCT     =
TK_NUM       19
TK_PUNCT     ;
TK_IDENT     r20
TK_PUNCT     =
TK_NUM       20
TK_PUNCT     ;
TK_IDENT     r21
TK_PUNCT     =
TK_NUM       21
TK_PUNCT     ;
TK_IDENT     r22
TK_PUNCT     =
TK_NUM       22
TK_PUNCT     ;
TK_IDENT     r23
TK_PUNCT     =
TK_NUM       23
TK_PUNCT     ;
TK_IDENT     r24
TK_PUNCT     =
TK_NUM       24
TK_PUNCT     ;
TK_IDENT     r25
TK_PUNCT     =
TK_NUM       25
TK_PUNCT     ;
TK_IDENT     r26
TK_PUNCT     =
TK_NUM       26
TK_PUNCT     ;
TK_IDENT     r27
TK_PUNCT     =
TK_NUM       27
TK_PUNCT     ;
TK_IDENT     r28
TK_PUNCT     =
TK_NUM       28
TK_PUNCT     ;
TK_IDENT     r29
TK_PUNCT     =
TK_NUM       29
TK_PUNCT     ;
TK_IDENT     r30
TK_PUNCT     =
TK_NUM       30
TK_PUNCT     ;
TK_IDENT     r31
TK_PUNCT     =
TK_NUM       31
TK_PUNCT     ;
TK_IDENT     r32
TK_PUNCT     =
TK_NUM       32
TK_PUNCT     ;
TK_IDENT     r33
TK_PUNCT     =
TK_NUM       33
TK_PUNCT     ;
TK_IDENT     r34
TK_PUNCT     =
TK_NUM       34
TK_PUNCT     ;
TK_IDENT     r35
TK_PUNCT     =
TK_NUM       35
TK_PUNCT     ;
TK_IDENT     r36
TK_PUNCT     =
TK_NUM       36
TK_PUNCT     ;
TK_IDENT     r37
TK_PUNCT     =
TK_NUM       37
TK_PUNCT     ;
TK_IDENT     r38
TK_PUNCT     =
TK_NUM       38
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r00
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r38
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     ;
TK_IDENT     n1
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       22
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   switch
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   case
TK_NUM       1
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     n2
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     nr
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       2
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     s
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     nr
TK_PUNCT     =
TK_IDENT     nr
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       3
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_KEYWORD   return
TK_NUM       16-
TK_IDENT     nr
TK_PUNCT     ;
TK_KEYWORD   else
TK_KEYWORD   return
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     regp
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r00
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r01
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r02
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r03
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r04
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r05
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r06
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r07
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r08
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r09
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r10
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r11
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r12
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r13
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r14
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r15
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r16
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r17
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r18
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r19
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r20
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r21
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r22
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r23
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r24
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r25
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r26
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r27
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r28
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r29
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r30
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r31
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r32
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r33
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r34
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r35
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r36
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r37
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     r38
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     s
TK_PUNCT     ,
TK_IDENT     n1
TK_PUNCT     ,
TK_IDENT     n2
TK_PUNCT     ,
TK_IDENT     nr
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     d
TK_PUNCT     [
TK_NUM       22
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     r00
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r00
TK_PUNCT     ;
TK_IDENT     r01
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     ;
TK_IDENT     r02
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     ;
TK_IDENT     r03
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     ;
TK_IDENT     r04
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     ;
TK_IDENT     r05
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     ;
TK_IDENT     r06
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     ;
TK_IDENT     r07
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     ;
TK_IDENT     r08
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     ;
TK_IDENT     r09
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     ;
TK_IDENT     r10
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     ;
TK_IDENT     r11
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     ;
TK_IDENT     r12
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     ;
TK_IDENT     r13
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     ;
TK_IDENT     r14
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     ;
TK_IDENT     r15
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     ;
TK_IDENT     r16
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     ;
TK_IDENT     r17
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     ;
TK_IDENT     r18
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     ;
TK_IDENT     r19
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     ;
TK_IDENT     r20
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     ;
TK_IDENT     r21
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     ;
TK_IDENT     r22
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     ;
TK_IDENT     r23
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     ;
TK_IDENT     r24
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     ;
TK_IDENT     r25
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     ;
TK_IDENT     r26
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     ;
TK_IDENT     r27
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     ;
TK_IDENT     r28
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     ;
TK_IDENT     r29
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     ;
TK_IDENT     r30
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     ;
TK_IDENT     r31
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     ;
TK_IDENT     r32
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     ;
TK_IDENT     r33
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     ;
TK_IDENT     r34
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     ;
TK_IDENT     r35
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     ;
TK_IDENT     r36
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     ;
TK_IDENT     r37
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     ;
TK_IDENT     r38
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     r38
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r00
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r01
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r02
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r03
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r05
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r07
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r09
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r11
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r13
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       9
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r15
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r17
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       11
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r19
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       12
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r21
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       13
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r23
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       14
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r25
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       15
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r27
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       16
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r29
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r31
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       18
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r33
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       19
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r35
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r36
TK_PUNCT     ;
TK_IDENT     d
TK_PUNCT     [
TK_NUM       21
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     r38
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     r37
TK_PUNCT     ;
TK_IDENT     n1
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       22
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   switch
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   case
TK_NUM       1
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     n2
TK_PUNCT     =
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_IDENT     s
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     nr
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       2
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     s
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     =
TK_IDENT     n2
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     nr
TK_PUNCT     =
TK_IDENT     nr
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_KEYWORD   case
TK_NUM       3
TK_PUNCT     :
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     d
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     n1
TK_PUNCT     )
TK_IDENT     s
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     ;
TK_KEYWORD   break
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s
TK_PUNCT     =
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_KEYWORD   return
TK_NUM       16-
TK_IDENT     nr
TK_PUNCT     ;
TK_KEYWORD   else
TK_KEYWORD   return
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s84
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     ip
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     fip
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pfi
TK_PUNCT     )
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ,
TK_IDENT     array
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     glork
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   int
TK_IDENT     x3d
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     fa
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     afp
TK_PUNCT     [
TK_NUM       17
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     sum
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s84er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s84,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs84
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s84    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs84
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     ip
TK_PUNCT     =
TK_IDENT     fip
TK_PUNCT     (
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     ip
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s84er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     pfi
TK_PUNCT     =
TK_IDENT     glork
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pfi
TK_PUNCT     )
TK_PUNCT     (
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s84er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       17
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     fa
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     ;
TK_IDENT     afp
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     fa
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sum
TK_PUNCT     =
TK_NUM       0.;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       17
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     sum
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     afp
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     sum
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       136
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s84er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       5
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     <
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     x3d
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     k
TK_PUNCT     ]
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     *
TK_NUM       35+
TK_IDENT     j
TK_PUNCT     *
TK_NUM       7+
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     k
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     array
TK_PUNCT     (
TK_IDENT     x3d
TK_PUNCT     ,
TK_NUM       105
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     +
TK_IDENT     array
TK_PUNCT     (
TK_IDENT     x3d
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     ,
TK_NUM       35
TK_PUNCT     ,
TK_NUM       35
TK_PUNCT     )
TK_PUNCT     +
TK_IDENT     array
TK_PUNCT     (
TK_IDENT     x3d
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ,
TK_NUM       7
TK_PUNCT     ,
TK_NUM       49
TK_PUNCT     )
TK_PUNCT     +
TK_IDENT     x3d
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     k
TK_PUNCT     ]
TK_PUNCT     -
TK_NUM       52
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s84er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     array
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     ,
TK_IDENT     size
TK_PUNCT     ,
TK_IDENT     start
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     a
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     size
TK_PUNCT     ,
TK_IDENT     start
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     i
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_IDENT     size
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     a
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     i
TK_PUNCT     +
TK_IDENT     start
TK_PUNCT     )
TK_KEYWORD   return
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   return
TK_NUM       0
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     fip
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   int
TK_IDENT     y
TK_PUNCT     ;
TK_IDENT     y
TK_PUNCT     =
TK_IDENT     x
TK_PUNCT     ;
TK_KEYWORD   return
TK_PUNCT     &
TK_IDENT     y
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     glork
TK_PUNCT     (
TK_IDENT     x
TK_PUNCT     )
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   return
TK_IDENT     x
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s85
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s85er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s85,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs85
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s85    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   struct
TK_IDENT     tnode
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     tword
TK_PUNCT     [
TK_NUM       20
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     count
TK_PUNCT     ;
TK_KEYWORD   struct
TK_IDENT     tnode
TK_PUNCT     *
TK_IDENT     left
TK_PUNCT     ;
TK_KEYWORD   struct
TK_IDENT     tnode
TK_PUNCT     *
TK_IDENT     right
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   struct
TK_IDENT     tnode
TK_IDENT     s1
TK_PUNCT     ,
TK_IDENT     s2
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     sp
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     c
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sc
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     s
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     ss
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     i
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     si
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     l
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sl
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     u
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     su
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     f
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sf
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     d
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     sd
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       7
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     type
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_STR       "char"
TK_PUNCT     ,
TK_STR       "short"
TK_PUNCT     ,
TK_STR       "int"
TK_PUNCT     ,
TK_STR       "long"
TK_PUNCT     ,
TK_STR       "unsigned"
TK_PUNCT     ,
TK_STR       "float"
TK_PUNCT     ,
TK_STR       "double"
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     aln
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       " alignment: "
TK_PUNCT     ;
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     twobit
TK_PUNCT     :
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     :
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     threebit
TK_PUNCT     :
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     onebit
TK_PUNCT     :
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s3
TK_PUNCT     ;
TK_KEYWORD   union
TK_PUNCT     {
TK_KEYWORD   char
TK_IDENT     u1
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   short
TK_IDENT     u2
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     u3
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   long
TK_IDENT     u4
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   unsigned
TK_IDENT     u5
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     u6
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   double
TK_IDENT     u7
TK_PUNCT     [
TK_NUM       30
TK_PUNCT     ]
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     u0
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs85
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     count
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     tword
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     <
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     left
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     count
TK_PUNCT     <
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     right
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     left
TK_PUNCT     <
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s85er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     sc
TK_PUNCT     .
TK_IDENT     c
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     sc
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       1
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     ss
TK_PUNCT     .
TK_IDENT     s
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     ss
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       2
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     si
TK_PUNCT     .
TK_IDENT     i
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     si
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     sl
TK_PUNCT     .
TK_IDENT     l
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     sl
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     su
TK_PUNCT     .
TK_IDENT     u
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     su
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       5
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     sf
TK_PUNCT     .
TK_IDENT     f
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     sf
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_IDENT     diff
TK_PUNCT     [
TK_NUM       6
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     sd
TK_PUNCT     .
TK_IDENT     d
TK_PUNCT     -
TK_PUNCT     &
TK_IDENT     sd
TK_PUNCT     .
TK_IDENT     cdummy
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "%s%s%d\n"
TK_PUNCT     ,
TK_IDENT     type
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     ,
TK_IDENT     aln
TK_PUNCT     ,
TK_IDENT     diff
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     threebit
TK_PUNCT     =
TK_NUM       7
TK_PUNCT     ;
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     twobit
TK_PUNCT     =
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     threebit
TK_PUNCT     ;
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     threebit
TK_PUNCT     =
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     twobit
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     threebit
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     threebit
TK_PUNCT     =
TK_PUNCT     =
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "Sign extension in fields\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   else
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s85er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_PUNCT     }
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     onebit
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s3
TK_PUNCT     .
TK_IDENT     onebit
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgm
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_STR       "Be especially careful with 1-bit fields!\n"
TK_PUNCT     )
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u1
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u2
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u3
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u4
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u5
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u6
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u7
TK_PUNCT     -
TK_PUNCT     (
TK_KEYWORD   char
TK_PUNCT     *
TK_PUNCT     )
TK_PUNCT     &
TK_IDENT     u0
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s85er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u1
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u2
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u3
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u4
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u5
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u6
TK_PUNCT     |
TK_PUNCT     |
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     <
TK_KEYWORD   sizeof
TK_IDENT     u0
TK_PUNCT     .
TK_IDENT     u7
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s85er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     right
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     s2
TK_PUNCT     ;
TK_IDENT     s2
TK_PUNCT     .
TK_IDENT     tword
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     s1
TK_PUNCT     .
TK_IDENT     right
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     tword
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     +
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     s2
TK_PUNCT     .
TK_IDENT     tword
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s85er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s86
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s86er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s86,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs86
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s86    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     lrc
TK_PUNCT     ,
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     one
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ,
TK_IDENT     j
TK_PUNCT     ,
TK_IDENT     k
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   int
TK_IDENT     x
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_NUM       1
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     pint
TK_PUNCT     =
TK_IDENT     x
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   int
TK_IDENT     zero
TK_PUNCT     [
TK_NUM       10
TK_PUNCT     ]
TK_PUNCT     ;
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     apint
TK_PUNCT     =
TK_IDENT     pint
TK_PUNCT     -
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     rpint
TK_PUNCT     =
TK_IDENT     apint
TK_PUNCT     +
TK_IDENT     one
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   float
TK_IDENT     y0
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_NUM       1
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     ,
TK_NUM       6
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     ,
TK_NUM       7
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     ,
TK_NUM       0
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   float
TK_IDENT     y1
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_PUNCT     {
TK_NUM       1
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     {
TK_NUM       2
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     ,
TK_NUM       6
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     {
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     ,
TK_NUM       7
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   float
TK_IDENT     y2
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_NUM       1
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     ,
TK_NUM       6
TK_PUNCT     ,
TK_NUM       3
TK_PUNCT     ,
TK_NUM       5
TK_PUNCT     ,
TK_NUM       7
TK_PUNCT     }
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   float
TK_IDENT     y3
TK_PUNCT     [
TK_NUM       4
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       3
TK_PUNCT     ]
TK_PUNCT     =
TK_PUNCT     {
TK_PUNCT     {
TK_NUM       1
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     {
TK_NUM       2
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     {
TK_NUM       3
TK_PUNCT     }
TK_PUNCT     ,
TK_PUNCT     {
TK_NUM       4
TK_PUNCT     }
TK_PUNCT     }
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs86
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pint
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     apint
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     rpint
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       5
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       10
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     zero
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       8
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       8
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       3
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_IDENT     k
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     *
TK_IDENT     i
TK_PUNCT     +
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     y1
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     y2
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     |
TK_PUNCT     |
TK_IDENT     y1
TK_PUNCT     [
TK_IDENT     i
TK_PUNCT     ]
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     y0
TK_PUNCT     [
TK_IDENT     k
TK_PUNCT     ]
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       16
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       16
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     <
TK_NUM       4
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     y3
TK_PUNCT     [
TK_IDENT     j
TK_PUNCT     ]
TK_PUNCT     [
TK_NUM       0
TK_PUNCT     ]
TK_PUNCT     !
TK_PUNCT     =
TK_IDENT     j
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s86er
TK_PUNCT     ,
TK_NUM       32
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       32
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     one
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   return
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   int
TK_PUNCT     *
TK_IDENT     metricp
TK_PUNCT     ;
TK_IDENT     s88
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s88er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s88,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs88
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s88    "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   typedef
TK_KEYWORD   int
TK_IDENT     MILES
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     KLICKSP
TK_PUNCT     ;
TK_KEYWORD   typedef
TK_KEYWORD   struct
TK_PUNCT     {
TK_KEYWORD   double
TK_IDENT     re
TK_PUNCT     ,
TK_IDENT     im
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     complex
TK_PUNCT     ;
TK_IDENT     MILES
TK_IDENT     distance
TK_PUNCT     ;
TK_KEYWORD   extern
TK_IDENT     KLICKSP
TK_IDENT     metricp
TK_PUNCT     ;
TK_IDENT     complex
TK_IDENT     z
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     zp
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs88
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_KEYWORD   sizeof
TK_IDENT     distance
TK_PUNCT     !
TK_PUNCT     =
TK_KEYWORD   sizeof
TK_PUNCT     (
TK_KEYWORD   int
TK_PUNCT     )
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s88er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     metricp
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     distance
TK_PUNCT     ;
TK_IDENT     distance
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     *
TK_IDENT     metricp
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     distance
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s88er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     z
TK_PUNCT     .
TK_IDENT     re
TK_PUNCT     =
TK_NUM       0.;
TK_IDENT     z
TK_PUNCT     .
TK_IDENT     im
TK_PUNCT     =
TK_NUM       0.;
TK_IDENT     zp
TK_PUNCT     =
TK_PUNCT     &
TK_IDENT     z
TK_PUNCT     ;
TK_IDENT     zp
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     re
TK_PUNCT     =
TK_NUM       1.;
TK_IDENT     zp
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     im
TK_PUNCT     =
TK_NUM       1.;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     z
TK_PUNCT     .
TK_IDENT     re
TK_PUNCT     +
TK_IDENT     z
TK_PUNCT     .
TK_IDENT     im
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2.)
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s88er
TK_PUNCT     ,
TK_NUM       4
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       4
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     s9
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     )
TK_KEYWORD   struct
TK_IDENT     defs
TK_PUNCT     *
TK_IDENT     pd0
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     s9er
TK_PUNCT     [
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s9,er%d\n"
TK_PUNCT     ;
TK_KEYWORD   static
TK_KEYWORD   char
TK_IDENT     qs9
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     =
TK_STR       "s9     "
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rc
TK_PUNCT     ;
TK_KEYWORD   char
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     ,
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     lrc
TK_PUNCT     ,
TK_IDENT     i
TK_PUNCT     ;
TK_IDENT     ps
TK_PUNCT     =
TK_IDENT     qs9
TK_PUNCT     ;
TK_IDENT     pt
TK_PUNCT     =
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     rfs
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   while
TK_PUNCT     (
TK_PUNCT     *
TK_IDENT     pt
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     =
TK_PUNCT     *
TK_IDENT     ps
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_KEYWORD   for
TK_PUNCT     (
TK_IDENT     i
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     <
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     i
TK_PUNCT     +
TK_PUNCT     +
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     ;
TK_PUNCT     {
TK_KEYWORD   int
TK_IDENT     j
TK_PUNCT     ;
TK_KEYWORD   register
TK_KEYWORD   int
TK_IDENT     k
TK_PUNCT     ;
TK_IDENT     j
TK_PUNCT     =
TK_IDENT     k
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       3
TK_PUNCT     )
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_PUNCT     (
TK_IDENT     j
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     |
TK_PUNCT     |
TK_PUNCT     (
TK_IDENT     k
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     )
TK_IDENT     lrc
TK_PUNCT     =
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     lrc
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s9er
TK_PUNCT     ,
TK_NUM       1
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       1
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   goto
TK_IDENT     nobarf
TK_PUNCT     ;
TK_KEYWORD   if
TK_PUNCT     (
TK_IDENT     pd0
TK_PUNCT     -
TK_PUNCT     >
TK_IDENT     flgd
TK_PUNCT     !
TK_PUNCT     =
TK_NUM       0
TK_PUNCT     )
TK_IDENT     printf
TK_PUNCT     (
TK_IDENT     s9er
TK_PUNCT     ,
TK_NUM       2
TK_PUNCT     )
TK_PUNCT     ;
TK_IDENT     rc
TK_PUNCT     =
TK_IDENT     rc
TK_PUNCT     +
TK_NUM       2
TK_PUNCT     ;
TK_IDENT     nobarf
TK_PUNCT     :
TK_PUNCT     ;
TK_KEYWORD   return
TK_IDENT     rc
TK_PUNCT     ;
TK_PUNCT     }
TK_IDENT     setev
TK_PUNCT     (
TK_PUNCT     )
TK_PUNCT     {
TK_KEYWORD   extern
TK_KEYWORD   int
TK_IDENT     extvar
TK_PUNCT     ;
TK_IDENT     extvar
TK_PUNCT     =
TK_NUM       1066
TK_PUNCT     ;
TK_PUNCT     }
TK_KEYWORD   int
TK_IDENT     lbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     ubits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     fbits
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     dbits
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     fprec
TK_PUNCT     ;
TK_KEYWORD   float
TK_IDENT     dprec
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgs
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgm
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgd
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     flgl
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     rrc
TK_PUNCT     ;
TK_KEYWORD   int
TK_IDENT     crc
TK_PUNCT     ;
TK_KEYWORD   char
TK_IDENT     rfs
TK_PUNCT     [
TK_NUM       8
TK_PUNCT     ]
TK_PUNCT     ;
